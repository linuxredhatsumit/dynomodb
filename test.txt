parameters:
  - name: DeployUAT
    type: boolean
    default: true
  - name: DeployDR
    type: boolean
    default: false
  - name: service
    type: string
  - name: ImageTag
    type: string
  - name: REPOSITORY_NAME
    type: string
  - name: BRANCH_NAME
    type: string
  - name: ENV
    type: string
    default: prod
  - name: DR_ENV
    type: string
    default: dr
  - name: HELM_CHARTS_PATH
    type: string

stages:
  - stage: CRON_DEPLOY_TAG_AND_TRIGGER
    displayName: "CRON Deploy Image Tag and Trigger PROD+DR"
    condition: or(eq('${{ parameters.DeployUAT }}', true), eq('${{ parameters.DeployDR }}', true))
    jobs:
      - job: ECR_IMAGE_PUSH
        displayName: "Push Tagged Image to PROD ECR and Update Helm"
        steps:
          - script: |
              echo "Using ImageTag: ${{ parameters.ImageTag }}"
            displayName: "Print Image Tag"

          - ${{ if eq(parameters.DeployUAT, true) }}:
              - script: |
                  echo "Login to source and prod ECR"
                  aws ecr get-login-password --region $(SOURCE_AWS_REGION) | docker login --username AWS --password-stdin $(SOURCE_AWS_ACCOUNT_ID).dkr.ecr.$(SOURCE_AWS_REGION).amazonaws.com
                  docker pull $(SOURCE_AWS_ACCOUNT_ID).dkr.ecr.$(SOURCE_AWS_REGION).amazonaws.com/$(SOURCE_ECR_FOLDER_NAME)/$(SOURCE_ECR_REPO_NAME):${{ parameters.ImageTag }}
                  docker tag $(SOURCE_AWS_ACCOUNT_ID).dkr.ecr.$(SOURCE_AWS_REGION).amazonaws.com/$(SOURCE_ECR_FOLDER_NAME)/$(SOURCE_ECR_REPO_NAME):${{ parameters.ImageTag }} $(PROD_AWS_ACCOUNT_ID).dkr.ecr.$(PROD_AWS_REGION).amazonaws.com/$(PROD_ECR_FOLDER_NAME)/$(PROD_ECR_REPO_NAME):$(PROD_PREFIX)-${{ parameters.ImageTag }}

                  aws ecr get-login-password --region $(PROD_AWS_REGION) | docker login --username AWS --password-stdin $(PROD_AWS_ACCOUNT_ID).dkr.ecr.$(PROD_AWS_REGION).amazonaws.com
                  docker push $(PROD_AWS_ACCOUNT_ID).dkr.ecr.$(PROD_AWS_REGION).amazonaws.com/$(PROD_ECR_FOLDER_NAME)/$(PROD_ECR_REPO_NAME):$(PROD_PREFIX)-${{ parameters.ImageTag }}
                displayName: "Tag and Push Docker Image"

          - script: |
              git clone https://$(PAT)@dev.azure.com/kmbl-devops/Kotak%20811%20Onboarding%20App/_git/${{ parameters.REPOSITORY_NAME }} -b ${{ parameters.BRANCH_NAME }}
            displayName: "Clone Helm Repository"

          - script: |
              ${{ if eq(parameters.DeployUAT, true) }} \
              && sed -i -e 's/tag:.*/tag: $(PROD_PREFIX)-${{ parameters.ImageTag }}/' ${{ parameters.HELM_CHARTS_PATH }}/${{ parameters.ENV }}-values.yaml

              ${{ if eq(parameters.DeployDR, true) }} \
              && sed -i -e 's/tag:.*/tag: $(PROD_PREFIX)-${{ parameters.ImageTag }}/' ${{ parameters.HELM_CHARTS_PATH }}/${{ parameters.DR_ENV }}-values.yaml
            displayName: "Update Helm Chart Image Tags"
            workingDirectory: $(System.DefaultWorkingDirectory)/${{ parameters.REPOSITORY_NAME }}

          - script: |
              git config --global user.email "pipeline@kotak.com"
              git config --global user.name "Pipeline"
              git add -A
              git commit -m "CRON updated imageTag to ${{ parameters.ImageTag }}"
              git pull --rebase
              git push origin ${{ parameters.BRANCH_NAME }}
            displayName: "Commit and Push Helm Changes"
            workingDirectory: $(System.DefaultWorkingDirectory)/${{ parameters.REPOSITORY_NAME }}
