value.yaml-----
global:
  clusterName: k811-eks-onb-dev
  collectionInterval: 60s
  domain: coralogix.in
opentelemetry-agent:
  config:
    processors:
      transform/remove-loglabels:
        error_mode: ignore
        log_statements:
        - context: resource
          statements:
          - delete_key(attributes, "host.image.id")
          - delete_key(attributes, "k8s.pod.uid")
          - delete_key(attributes, "cloud.account.id")
          - delete_key(attributes, "cloud.platform")
          - delete_key(attributes, "cloud.availability.zone")
          - delete_key(attributes, "cloud.availability_zone")
          - delete_key(attributes, "os.type")
          - delete_key(attributes, "cloud.provider")
          - delete_key(attributes, "cloud.region")
          - delete_key(attributes, "host.type")
    service:
      pipelines:
        logs:
          processors:
          - k8sattributes
          - resourcedetection/env
          - resourcedetection/region
          - batch
          - transform/remove-loglabels
        traces:
          exporters:
          - loadbalancing
  enabled: true
  mode: daemonset
  presets:
    loadBalancing:
      enabled: true
      hostname: coralogix-opentelemetry-gateway
      routingKey: traceID
    spanMetrics:
      enabled: true
opentelemetry-agent-windows:
  enabled: false
opentelemetry-cluster-collector:
  enabled: true
opentelemetry-gateway:
  config:
    processors:
      tail_sampling:
        policies:
        - name: errors-policy
          status_code:
            status_codes:
            - ERROR
          type: status_code
        - name: randomized-policy
          probabilistic:
            sampling_percentage: 10
          type: probabilistic
  enabled: true
  replicaCount: 3

serviceaccount:
  name: coraloigx-dev-sa
  enabled: true
  role: arn:aws:iam::483584640083:role/coraloigx-dev-eks-sa
rolebinding: coraloigx-dev-rb

appconfig:
  APPCONFIG_ENABLED: "true"
  APPCONFIG_ENVIRONMENT: "development"
  APPCONFIG_APPLICATION: "coralogix"



template/config.yaml-----
{{- if not .Values.ssmParameter.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Chart.Name }}-configmap
  namespace: {{ .Values.namespace }}
data:
  {{- range $key, $value := .Values.appconfig }}
  {{ $key }}: {{ $value | toString | quote }}
  {{- end }}
{{- end }}


templae/rolebanding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ .Values.rolebinding }}
  namespace: {{ .Values.namespace }}
subjects:
- kind: ServiceAccount
  name: {{ .Values.serviceaccount.name }}
  namespace: {{ .Values.namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ .Values.role.name }}

templte/servcieaccount.yaml----
{{- if .Values.serviceaccount.enabled }}
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations: 
    eks.amazonaws.com/role-arn: {{ .Values.serviceaccount.role }}
  name: {{ .Values.serviceaccount.name }}
  namespace: {{ .Values.namespace }}
{{- end }}

templte/_hleper.tpl
#templates/helpers.tpl
{{/* vim: set filetype=mustache: */}}
{{/*
Expand the name of the chart.
*/}}
{{- define "name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" -}}
{{- end -}}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
*/}}
{{- define "fullname" -}}
{{- $name := default .Chart.Name .Values.nameOverride -}}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" -}}
{{- end -}}

  APPCONFIG_PROFILE: "coralogix-dev-secret"
