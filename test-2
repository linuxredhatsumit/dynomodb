trigger: none

parameters:
  - name: otel_version
    displayName: "Enter OTEL Chart Version"
    type: string
    default: "0.0.218"

  - name: environment
    displayName: "Select Environment"
    type: string
    default: "non-prod"
    values:
      - non-prod
      - prod

variables:
  - name: AWS_REGION
    value: ap-south-1

  - name: NONPROD_POOL_NAME
    value: "K811-DevOps"
  - name: PROD_POOL_NAME
    value: "k811-prod"

  - name: PROD_AWS_ACCOUNT_ID
    value: "718378052708"
  - name: NONPROD_AWS_ACCOUNT_ID
    value: "483584640083"

  - name: PROD_ROLE_NAME
    value: "EKS-Setup-Role-Kotak811"
  - name: UAT_ROLE_NAME
    value: "EKS_Setup_Role"

  # Base Helm repo (your source repo)
  - name: BASS_REPO_URL
    value: "https://cgx.jfrog.io/artifactory/coralogix-charts-virtual"

  # Target S3 Buckets
  - name: PROD_BUCKET
    value: s3://k811-onb-helmcharts/others/coralogix/
  - name: NONPROD_BUCKET
    value: s3://kotak811-helmcharts/others/coralogix/

stages:
  - stage: UploadHelmChart
    displayName: "Mirror OTEL Chart from Base Repo to S3"
    jobs:
      - job: HelmUpload
        displayName: "Pull from Base Repo & Upload to Selected Environment"
        pool:
          name: $[eq(parameters.environment, 'prod') ? variables['PROD_POOL_NAME'] : variables['NONPROD_POOL_NAME']]
        steps:
          - checkout: none

          - script: |
              echo "Environment Selected: ${{ parameters.environment }}"
              echo "OTEL Version: ${{ parameters.otel_version }}"

              # Determine correct AWS credentials and S3 bucket
              if [ "${{ parameters.environment }}" == "prod" ]; then
                export AWS_ACCOUNT_ID=$(PROD_AWS_ACCOUNT_ID)
                export ROLE_NAME=$(PROD_ROLE_NAME)
                export S3_PATH=$(PROD_BUCKET)
              else
                export AWS_ACCOUNT_ID=$(NONPROD_AWS_ACCOUNT_ID)
                export ROLE_NAME=$(UAT_ROLE_NAME)
                export S3_PATH=$(NONPROD_BUCKET)
              fi

              echo "Assuming role for AWS Account: $AWS_ACCOUNT_ID"
              unset AWS_SESSION_TOKEN AWS_SECRET_ACCESS_KEY AWS_ACCESS_KEY_ID
              CREDS=$(aws sts assume-role --role-arn arn:aws:iam::$AWS_ACCOUNT_ID:role/$ROLE_NAME --role-session-name otel-upload-${{ parameters.environment }}-$(Build.BuildNumber))
              export AWS_ACCESS_KEY_ID=$(echo $CREDS | jq -r '.Credentials.AccessKeyId')
              export AWS_SECRET_ACCESS_KEY=$(echo $CREDS | jq -r '.Credentials.SecretAccessKey')
              export AWS_SESSION_TOKEN=$(echo $CREDS | jq -r '.Credentials.SessionToken')

              echo "Pulling OTEL Helm Chart v${{ parameters.otel_version }} from Base Repo..."
              helm repo add coralogix $BASS_REPO_URL
              helm repo update

              # Verify version exists before proceeding
              if ! helm search repo coralogix/otel-integration --version ${{ parameters.otel_version }} | grep -q ${{ parameters.otel_version }}; then
                echo "❌ Version ${{ parameters.otel_version }} not found in Base repo ($BASS_REPO_URL)"
                exit 1
              fi

              helm pull coralogix/otel-integration --version ${{ parameters.otel_version }}

              mkdir merged && cd merged
              mv ../otel-integration-${{ parameters.otel_version }}.tgz .

              # Merge index.yaml to keep old versions
              echo "Fetching existing index.yaml (if any)..."
              aws s3 cp $S3_PATH/index.yaml existing-index.yaml || echo "No existing index.yaml found, creating new one."

              echo "Merging index..."
              helm repo index . --url https://${S3_PATH#s3://}.s3.$(AWS_REGION).amazonaws.com --merge existing-index.yaml

              echo "Uploading Helm Chart and index.yaml to $S3_PATH ..."
              aws s3 cp otel-integration-${{ parameters.otel_version }}.tgz $S3_PATH
              aws s3 cp index.yaml $S3_PATH --content-type "application/x-yaml"

              echo "✅ Successfully mirrored OTEL v${{ parameters.otel_version }} from Base Repo to ${{ parameters.environment }} S3 repo."
            displayName: "Mirror OTEL Helm Chart"
