trigger: none

schedules:
  - cron: "0 * * * *"  # Every hour
    displayName: Hourly Run
    branches:
      include:
        - master
    always: true
variables:
  # - group: Kotak-ECR-Credentials
  - name: NONPROD_POOL_NAME
    value: "K811-DevOps"
  - name: PROD_POOL_NAME
    value: "k811-prod"
  - name: PROD_AWS_ACCOUNT_ID
    value: "718378052708"
  - name: NONPROD_AWS_ACCOUNT_ID
    value: "483584640083"
  - name: PROD_ROLE_NAME
    value: "EKS-Setup-Role-Kotak811"
  - name: UAT_ROLE_NAME
    value: "EKS_Setup_Role"
  - name: AGENT_IN_AGENTPOOL
    value: Linux-Agent1

stages:
  - stage: RunOnNonProd
    displayName: "Run Script on NonProd Environment"
    jobs:
      - job: NonProdJob
        pool:
          name: $(NONPROD_POOL_NAME)
          demands:
            - agent.name -equals $(AGENT_IN_AGENTPOOL)
        steps:
          - checkout: self

          - script: |
              unset AWS_SESSION_TOKEN
              unset AWS_SECRET_ACCESS_KEY
              unset AWS_ACCESS_KEY_ID
              CREDENTIALS=$(aws sts assume-role --role-arn arn:aws:iam::$(NONPROD_AWS_ACCOUNT_ID):role/$(UAT_ROLE_NAME) --role-session-name $(Build.DefinitionName)-$(Build.BuildNumber))
              export AWS_SESSION_TOKEN=$(echo $CREDENTIALS | jq -r '.Credentials.SessionToken')
              export AWS_SECRET_ACCESS_KEY=$(echo $CREDENTIALS | jq -r '.Credentials.SecretAccessKey')
              export AWS_ACCESS_KEY_ID=$(echo $CREDENTIALS | jq -r '.Credentials.AccessKeyId')
              cd others/api-dsiable-logs
              python3 api-disable-logs.py
            displayName: "Run Python Script on Dev"

  - stage: RunOnProd
    displayName: "Run Script on Prod Environment"
    jobs:
      - job: ProdJob
        pool:
          name: $(PROD_POOL_NAME)
        steps:
          - checkout: self

          - script: |
              unset AWS_SESSION_TOKEN
              unset AWS_SECRET_ACCESS_KEY
              unset AWS_ACCESS_KEY_ID
              CREDENTIALS=$(aws sts assume-role --role-arn arn:aws:iam::$(PROD_AWS_ACCOUNT_ID):role/$(PROD_ROLE_NAME) --role-session-name $(Build.DefinitionName)-$(Build.BuildNumber))
              export AWS_SESSION_TOKEN=$(echo $CREDENTIALS | jq -r '.Credentials.SessionToken')
              export AWS_SECRET_ACCESS_KEY=$(echo $CREDENTIALS | jq -r '.Credentials.SecretAccessKey')
              export AWS_ACCESS_KEY_ID=$(echo $CREDENTIALS | jq -r '.Credentials.AccessKeyId')
              cd others/api-dsiable-logs
              python3 api-disable-logs.py
            displayName: "Run Python Script on Prod"
