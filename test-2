provider "aws" {
  region = "ap-south-1"
}

module "s3_bucket" {
  source = "../../../../../terraform-modules/s3"

  bucket = "cpg-aadhaar-consent-audio-dev"
  force_destroy = true
  
  versioning = {
    enabled = true
  }

  control_object_ownership = true
  object_ownership  = "BucketOwnerEnforced"

  # S3 bucket-level Public Access Block configuration
  block_public_acls       = true
  block_public_policy     = true
  ignore_public_acls      = true
  restrict_public_buckets = true

  server_side_encryption_configuration = {
    rule = {
      apply_server_side_encryption_by_default = {
        sse_algorithm = "AES256"
      }
    }
  }
  tags = {
      entity               = "KMBL"
      application-name     = "811 Onboarding App"
      application-id       = "APP-01783"
      application-owner    = "Shubhashish Gaurav"
      application-manager  = "Anilkumar singam"
      vertical-tlt         = "Amlan Mandal"
      application-rating   = "high"
      ticket-id            = "DEVOPS-9550"
      environment          = "dev"
      project-name         = "811-ONB"
      Name                 = "cpg-aadhaar-consent-audio-dev"
      budget-type          = "rtb"
      monitoring           = "yes"
      db-engine            = "NA"
      created-date         = "09-22-2025"
      instance-node-type   = "NA"
      backup               = "no"
      scheduler-start      = "NA"
      scheduler-stop       = "NA"
      end-date             = "NA"
      created-by-terraform = "yes"
      terraform-version    = "1.7.4"
      resource-name        = "s3-onb-dev-bucket"
      project-811          = "ONB"
  }
}

#Resource to attach a bucket policy to a bucket 
resource "aws_s3_bucket_policy" "ssl_policy" {
  bucket = module.s3_bucket.s3_bucket_id
  policy = <<EOF
{
  "Version": "2012-10-17",
  "Id": "SSLPolicy",
  "Statement": [
      {
        "Sid": "AllowSSLRequestsOnly",
        "Effect": "Deny",
        "Principal": "*",
        "Action": "s3:*",
        "Resource": [
          "${module.s3_bucket.s3_bucket_arn}",
          "${module.s3_bucket.s3_bucket_arn}/*"
        ],
        "Condition": {
            "Bool": {
                "aws:SecureTransport": "false"
            }
        }
      },
      {
        "Sid": "AllowCloudFrontServicePrincipal",
        "Effect": "Allow",
        "Principal": {
            "Service": "cloudfront.amazonaws.com"
        },
        "Action": "s3:GetObject",
        "Resource": "${module.s3_bucket.s3_bucket_arn}/*",
        "Condition": {
            "StringEquals": {
                "AWS:SourceArn": "${module.cloudfront.cloudfront_distribution_arn}"
            }
        }
      }
  ]
}
EOF

}

module "cloudfront" {
  source = "../../../../../terraform-modules/cloudfront"

  comment             = "dev verify-plus frontend "
  enabled             = true
  http_version        = "http2and3"
  is_ipv6_enabled     = true
  price_class         = "PriceClass_200"
  retain_on_delete    = false
  wait_for_deployment = false
  aliases             = ["verifyplus.dev.kotak811.com"]
  create_monitoring_subscription = true

  # create_origin_access_identity = true
  # origin_access_identities = {
  #   s3_bucket_one = module.s3_bucket.s3_bucket_bucket_domain_name
  # }

  create_origin_access_control = true
  origin_access_control = {
    cpg-aadhaar-consent-audio-dev = {
      description      = "CloudFront access to S3"
      origin_type      = "s3"
      signing_behavior = "always"
      signing_protocol = "sigv4"
    }
  }

  origin = {
    cpg-aadhaar-consent-audio-dev = { # with origin access control settings (recommended)
      domain_name           = module.s3_bucket.s3_bucket_bucket_domain_name
      origin_access_control = "cpg-aadhaar-consent-audio-dev" # key in `origin_access_control`
    }
  }

  default_cache_behavior = {
    target_origin_id       = "cpg-aadhaar-consent-audio-dev"
    viewer_protocol_policy = "allow-all"
    allowed_methods        = ["GET", "HEAD", "OPTIONS"]
    cached_methods         = ["GET", "HEAD"]
    compress               = true
    query_string           = true
    viewer_protocol_policy = "redirect-to-https"

    # This is id for SecurityHeadersPolicy copied from https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-response-headers-policies.html

    response_headers_policy_id = "67f7725c-6f97-4210-82d7-5512b31e9d03"
  }

  viewer_certificate = {
    acm_certificate_arn = "arn:aws:acm:us-east-1:483584640083:certificate/73b7697c-2e58-4115-bb3b-b9aafc0587ee"
    ssl_support_method  = "sni-only"
    minimum_protocol_version = "TLSv1.2_2021"
  }

  default_root_object = "index.html"

  custom_error_response = [{
    error_code         = 403
    response_code      = 200
    error_caching_min_ttl = 5
    response_page_path = "/index.html"
  }]

  tags = {
      entity               = "KMBL"
      application-name     = "811 Onboarding App"
      application-id       = "APP-01783"
      application-owner    = "Shubhashish Gaurav"
      application-manager  = "Anilkumar singam"
      vertical-tlt         = "Amlan Mandal"
      application-rating   = "high"
      ticket-id            = "DEVOPS-9550"
      environment          = "dev"
      project-name         = "811-ONB"
      Name                 = "cpg-aadhaar-consent-audio-dev"
      budget-type          = "rtb"
      monitoring           = "yes"
      db-engine            = "NA"
      created-date         = "09-22-2025"
      instance-node-type   = "NA"
      backup               = "no"
      scheduler-start      = "NA"
      scheduler-stop       = "NA"
      end-date             = "NA"
      created-by-terraform = "yes"
      terraform-version    = "1.7.4"
      resource-name        = "cloudfront-onb-dev-cdn"
      project-811          = "ONB"
  }
}

###############################################################
#Backend Terraform State
###############################################################
terraform {
  backend "s3" {
    #Replace this with your bucket name!
    bucket            = "kotak811-terraform-state"
    key               = "kotak811/env/kotak811-dev/ONB-Project/s3-cloudfront/cpg-aadhaar-consent-audio-dev/s3.tfstate"
    region            = "ap-south-1"
    #Replace this with your DynamoDB table name!
    dynamodb_table    = "tf-up-and-run-locks"
    encrypt           = true
    }
}


below errror

module.cloudfront.aws_cloudfront_distribution.this[0]: Still creating... [1m10s elapsed]
╷
│ Error: creating CloudFront Distribution: operation error CloudFront: CreateDistributionWithTags, https response error StatusCode: 400, RequestID: 58348261-97b7-4689-b8db-b4ff30dcf059, InvalidViewerCertificate: The specified SSL certificate doesn't exist, isn't in us-east-1 region, isn't valid, or doesn't include a valid certificate chain.
│ 
│   with module.cloudfront.aws_cloudfront_distribution.this[0],
│   on ../../../../../terraform-modules/cloudfront/main.tf line 27, in resource "aws_cloudfront_distribution" "this":
│   27: resource "aws_cloudfront_distribution" "this" {
│ 
╵

##[error]Bash exited with code '1'.
Finishing: Terraform Apply
