apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Values.namespace }}
  name: {{ .Chart.Name }}
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
spec:
  progressDeadlineSeconds: {{ .Values.deadlineSeconds }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      {{- if .Values.isCustomIstio.enabled }}      
      annotations:
        sidecar.istio.io/proxyImage: "{{ .Values.custom_istio_image.repository }}:{{ .Values.custom_istio_image.istio_tag }}"                                    
        checksum/config: {{ include (print $.Template.BasePath "/hooks/proxyconfig.yaml") . | sha256sum }}
      labels:
        app: {{ .Chart.Name }}      
        codec: auto
      {{- else }}
      labels:
        app: {{ .Chart.Name }}      
      {{- end }}  
    spec:
      serviceAccountName: {{ .Values.serviceaccount.name }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - {{ .Chart.Name }}
            topologyKey: "kubernetes.io/hostname"
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: {{ .Values.node.name }}
                operator: {{ .Values.node.operator }}
                {{- range .Values.nodegroup }}
                values: {{.}}
                {{- end }}
      {{- if eq .Values.env "dev-arm" }}
      tolerations:
      - key: "{{ .Values.tolerations.key }}"
        operator: "{{ .Values.tolerations.operator }}"
        value: "{{ .Values.tolerations.value }}"
        effect: "{{ .Values.tolerations.effect }}"
      {{ end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.service.internalPort }}
        env:
          - name: NODE
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: {{ .Values.appconfig.OTEL_EXPORTER_OTLP_ENDPOINT }}
        # volumeMounts:
        #   - name: secrets-store-inline
        #     mountPath: "/mnt/secrets"
        #     readOnly: true
        envFrom:
        # - secretRef:
        #     name: {{ .Chart.Name }}-secrets
        - configMapRef:
            name: {{ .Chart.Name }}-configmap
        livenessProbe:
          httpGet:
            path: {{ .Values.probePath }}
            port: {{ .Values.service.internalPort }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
        readinessProbe:
          httpGet:
            path: {{ .Values.probePath }}
            port: {{ .Values.service.internalPort }}
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
      # volumes:
      #   - name: secrets-store-inline
      #     csi:
      #       driver: secrets-store.csi.k8s.io
      #       readOnly: true
      #       volumeAttributes:
      #         secretProviderClass: {{ .Chart.Name }}-spc
