
provider "aws" {
  region = local.region
}

locals {
  name   = "811-bre-s3-fetch-trigger-uat-moveit-user"
  region = "ap-south-1"
  tags = {
    Name                 = "${local.name}"
    entity               = "KMBL"
    application-name     = "811 Onboarding App"
    application-id       = "APP-01783"
    application-owner    = "Sidhartha Topcharla"
    application-manager  = "kamal Rathi"
    vertical-tlt         = "Amlan Mandal"
    application-rating   = "high"
    ticket-id            = "DEVOPS-7050"
    environment          = "uat"
    project-name         = "811-ONB"
    project-811          = "ONB"
    resource-name        = "onb-uat-iam-user-auth"
    budget-type          = "rtb"
    monitoring           = "yes"
    db-engine            = "NA"
    created-date         = "03-27-2025"
    instance-node-type   = "NA"
    backup               = "no"
    scheduler-start      = "NA"
    scheduler-stop       = "NA"
    end-date             = "NA"
    created-by-terraform = "yes"
    terraform-version    = "1.9.7"
    poc                  = "Akshat Jaiswal"
  }
}

################################################################
# IAM Module
################################################################
module "iam_user" {
  source = "../../../../../terraform-modules/iam/modules/iam-user"

  create_user = true

  name          = local.name
  force_destroy = true

  create_iam_access_key         = true
  iam_access_key_status         = "Active"
  create_iam_user_login_profile = false

  tags = merge({ "Name" = "${local.name}-user" }, local.tags)
}

resource "aws_iam_access_key" "second" {

  user   = module.iam_user.iam_user_name
  status = "Active"
}

#####################################################################################
# IAM group for users with custom access
#####################################################################################
module "iam_group_with_custom_policies" {
  source = "../../../../../terraform-modules/iam/modules/iam-group-with-policies"

  name = "${local.name}-group"
  group_users = [
    module.iam_user.iam_user_name
  ]
  attach_iam_self_management_policy = false
  custom_group_policy_arns = [
    module.iam_policy.arn
  ]

  tags = merge({ "Name" = "${local.name}-group" }, local.tags)
}

#########################################
# IAM policy
#########################################

module "iam_policy" {
  source      = "../../../../../terraform-modules/iam/modules/iam-policy"
  name        = "${local.name}-policy"
  path        = "/"
  description = "Customized policy for the ${local.name} to access aws services"

  policy = <<EOF
{
    "Version" : "2012-10-17",
    "Statement" : [
      {
        "Effect" : "Allow",
        "Action" : [
          "s3:Get*",
          "s3:List*",
          "s3:PutObject"
        ],
        "Resource" : [
          "arn:aws:s3:::811-bre-s3-fetch-trigger-uat",
          "arn:aws:s3:::811-bre-s3-fetch-trigger-uat/*"
        ]
      }
    ]
  }
EOF
  tags   = merge({ "PolicyDescription" = "Created for pushing objects to the s3 bucket files from moveit job using IAM user access keys" }, local.tags)
}

terraform {
  backend "s3" {
    #Replace this with your bucket name!
    bucket = "kotak811-terraform-state"
    key    = "kotak811/env/kotak811-uat/ONB-Project/iam/811-bre-s3-fetch-trigger-uat/iam.tfstate"
    region = "ap-south-1"
    #Replace this with your DynamoDB table name!
    dynamodb_table = "tf-up-and-run-locks"
    encrypt        = true
  }
}
