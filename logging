 module.iam_user.aws_iam_access_key.this_no_pgp[0] will be created
  + resource "aws_iam_access_key" "this_no_pgp" {
      + create_date                    = (known after apply)
      + encrypted_secret               = (known after apply)
      + encrypted_ses_smtp_password_v4 = (known after apply)
      + id                             = (known after apply)
      + key_fingerprint                = (known after apply)
      + secret                         = (sensitive value)
      + ses_smtp_password_v4           = (sensitive value)
      + status                         = "Active"
      + user                           = "k811-indus-files-s3-bucket-read-access-user"
    }
how it's coming above one below is my tf
provider "aws" {
  region = local.region
}

locals {
  name = "k811-indus-files-s3-bucket-read-access"
  region = "ap-south-1"

  tags = {
    entity               = "KMBL"
    application-name     = "811 Onboarding App"
    application-id       = "APP-01783"
    application-owner    = "Amlan Mandal"
    application-manager  = "Anilkumar singam"
    vertical-tlt         = "Manish A"
    application-rating   = "high"
    ticket-id            = "DEVOPS-715 DEVOPS-5658"
    environment          = "dev"
    project-name         = "811-ONB"
    resource-name        = "iam-prod-app"
    budget-type          = "rtb"
    monitoring           = "yes"
    db-engine            = "NA"
    created-date         = "09-21-2023"
    instance-node-type   = "NA"
    backup               = "no"
    scheduler-start      = "NA"
    scheduler-stop       = "NA"
    end-date             = "NA"
    created-by-terraform = "yes"
    terraform-version    = "1.8.4"
  }
}

module "iam_user" {
  source = "../../../../../terraform-modules/iam/modules/iam-user"

  create_user = true

  name          = "${local.name}-user"
  force_destroy = true

  create_iam_access_key = true
  iam_access_key_status = "Active"
  create_iam_user_login_profile = false

  tags = "${merge({"Name"= "${local.name}-user"}, local.tags)}"
}

# remove this part once key is replaced in moveit jobs
resource "aws_iam_access_key" "second" {

  user    = module.iam_user.iam_user_name
  status  = "Active"
}

resource "aws_iam_access_key" "new" {

  user    = module.iam_user.iam_user_name
  status  = "Active"
}
#####################################################################################
# IAM group for users with custom access
#####################################################################################
module "iam_group_with_custom_policies" {
  source = "../../../../../terraform-modules/iam/modules/iam-group-with-policies"

  name = "${local.name}-group"

  group_users = [
    module.iam_user.iam_user_name
  ]

  attach_iam_self_management_policy = false

  custom_group_policy_arns = [
    module.iam_policy.arn
  ]

  tags = "${merge({"Name"= "${local.name}-group"}, local.tags)}"
}

#########################################
# IAM policy
#########################################

module "iam_policy" {
  source = "../../../../../terraform-modules/iam/modules/iam-policy"

  name        = "${local.name}-policy"
  path        = "/"
  description = "Customized policy for the ${local.name} to access aws services"

  policy = <<EOF
{
    "Version": "2012-10-17",
    "Statement": [
        {
			"Sid": "VisualEditor0",
			"Effect": "Allow",
			"Action": [
				"s3:GetObjectAcl",
        "s3:GetObject",
        "s3:ListBucketMultipartUploads",
        "s3:ListBucketVersions",
        "s3:ListBucket",
        "s3:GetBucketLocation",
        "s3:ListMultipartUploadParts"
			],
			"Resource": [
				"arn:aws:s3:::811-scc-grouped-indus-file-prod/*",
        "arn:aws:s3:::811-scc-grouped-indus-file-prod",
				"arn:aws:s3:::811-scc-grouped-indus-file-copied-prod/*",
        "arn:aws:s3:::811-scc-grouped-indus-file-copied-prod"
			]
		},
		{
			"Sid": "VisualEditor1",
			"Effect": "Allow",
			"Action": [
                "s3:ListAllMyBuckets",
                "s3:ListAccessPoints",
                "s3:ListJobs",
                "s3:ListMultiRegionAccessPoints"
            ],
			"Resource": "*"
		},
		{
			"Sid": "VisualEditor2",
			"Effect": "Allow",
			"Action": [
				"s3:PutObject",
        "s3:PutObjectRetention",
        "s3:PutObjectVersionTagging",
        "s3:PutObjectTagging",
        "s3:ListBucket",
        "s3:GetBucketLocation"
			],
			"Resource": [
                "arn:aws:s3:::811-scc-grouped-indus-file-copied-prod",
                "arn:aws:s3:::811-scc-grouped-indus-file-copied-prod/*"
            ]
		}
    ]
}
EOF

  tags = "${merge({"PolicyDescription"= "Created for accessing the prod scc grouped indus s3 files from on-premise server"}, local.tags)}"
}

###############################################################
#Backend Terraform State
###############################################################
terraform {
  backend "s3" {
    #Replace this with your bucket name!
    bucket            = "kotak811-prod-terraform-state"
    key               = "kotak811/env/kotak811-prod/iam/iam-users/k811-indus-files-s3-bucket-read-access/iam.tfstate"
    region            = "ap-south-1"
    #Replace this with your DynamoDB table name!
    dynamodb_table    = "tf-up-and-run-locks"
    encrypt           = true
    }
}

i have not defiend this_no_pgp"

